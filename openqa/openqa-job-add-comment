#!/usr/bin/perl

use Mojo::Base -strict;
use Mojo::UserAgent;
use Mojo::UserAgent::Transactor;
use Mojo::File qw(path);
use Getopt::Long qw(:config no_ignore_case bundling auto_help);
use Pod::Usage;
use Data::Dumper;

sub get_json
{
    my $url = shift;
    my $ua      = Mojo::UserAgent->new();
    $ua->max_redirects(5);

    my $res = $ua->get($url)->res;
    return $res->json if ($res && $res->json);

    map { sprintf("%s: %s\n", $_, trim($res->error->{$_})) } keys %{$res->error};
    die("Unable to receive json from $url");
}

sub main {
    my $HOST = 'https://openqa.suse.de';
    my @JOBS;
    my $COMMENT = undef;

    GetOptions(
        'host=s' => \$HOST,
        'comment|c=s' => \$COMMENT,
    ) or die;

    die("Missing --comment") unless($COMMENT);

    my @parsable_urls;
    for my $arg (@ARGV){
        if ($arg eq '-'){
            while (my $line = <>){
                push(@parsable_urls, ($line =~ m%(https?://[^/]+/(?:t\d+|tests/\d+))\s+%gm));
            }
        } else {
            push(@parsable_urls, $arg);
        }
    }

    for my $url (@parsable_urls){
        if ($url =~ m%^(https?://[^/]+)/tests/(\d+)%){
            $HOST = $1;
            push @JOBS, $2;
        }elsif ($url =~ m%^(https?://[^/]+)/t(\d+)%){
            $HOST = $1;
            push @JOBS, $2;
        }elsif ($url =~ m/^\d+$/){
            push @JOBS, $url;
        } else {
            die("Unable to parse $url");
        }
    }

    $HOST =~ s'/+$'';
    $COMMENT=~ s/'/'"'"'/;
    JOB: for my $job (@JOBS) {
        my $url = $HOST . '/t' . $job;

        # openqa-client --host https://openqa.suse.de jobs/3918778/comments post --form text="test"
        my $comments = get_json($HOST. '/api/v1/jobs/'. $job . '/comments');
        for my $comment (@$comments){
            if ($comment->{text} eq $COMMENT){
                next JOB;
            }
        }

        my $cmd = "openqa-cli api --host $HOST -X POST jobs/$job/comments post  'text=$COMMENT'";
        say $cmd;
        system($cmd);
    }
}

exit(main(@ARGV));

__END__

=head1 NAME

Download all assets from job and put it in separate folder

=head1 SYNOPSIS

openqa-download-job [options] [urls|job_ids]

  Options:
    --host                On which host the job is triggered (default: openqa.suse.de)
    --comment|-c <string> The comment to add to the tests
=cut
