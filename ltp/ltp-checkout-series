#!/usr/bin/perl
use Mojo::Base -strict;
use Mojo::UserAgent;
use Mojo::Util qw(trim);
use Getopt::Long qw(:config no_ignore_case bundling auto_help);
use Data::Dumper;

my $dry_run;

sub run {
    my $cmd = shift;

    print $cmd . $/;
    unless ($dry_run){
        system($cmd) eq 0 or die("FAILED: $cmd $/ $@");
    }
}

sub do_http_request
{
    my $url = shift;
    my $max_tries = 3;
    my $res;
    my $ua = Mojo::UserAgent->new();
    $ua->max_redirects(5);
    for(my $i = 0; $i < $max_tries; $i++){
        $res = $ua->get($url)->result;
        return $res if ($res->is_success());
        print "[". ($i + 1) . "/$max_tries] Get $url failed - " . $res->message . $/;
        sleep 1;
    }
    die("Failed to get $url");
}

sub main
{
    GetOptions(
        'dry-run' => \$dry_run) or die;
    die("Missing <url>") unless @ARGV;

    my $url = $ARGV[0];
    my $patch_series_url;
    my $title;

    if ($url =~ m%^(https?://[^/]+)/patch/([^/&]+)%){
        my $site = $1;
        my $res = do_http_request($url);
        for my $link (@{$res->dom->find('a[href*="series"]')->map(attr => 'href')}){
            if ($link =~ m%/series/(\d+)/mbox/%){
                $url = $site.'/project/ltp/list/?series='.$1;
                last;
            }
        }
    }

    if ($url =~ m%^(https:?//[^/]+)/project/ltp/list/\?series=(\d+)%) {
        my $site = $1;
        my $series_nr = $2;
        my $res = do_http_request($url);
        $title = trim($res->dom->find('td > a[href="?series='.$series_nr.'"]')->first()->text());
        my $patch = trim($res->dom->find('tbody > tr[id^="patch_row:"] > td > a[href^="/patch/"]')->first()->text());
        $title = $1 . "_" . $title if ($patch =~ m/^\[(v\d)[^\]]+\](.+)/);

        $patch_series_url = $site . '/series/' . $series_nr . '/mbox/';

    } else {
        die ("Unkown link format given!");
    }


    die("Patch series URL not found.") unless $patch_series_url;
    die("Unable to get title") unless $title;

    $title = trim($title);
    print "$/Patch series name: " . $title .$/.$/;
    $title = $1 . "_" . trim($2) if ($title =~ m/^\[(v\d)[^\]]+\](.+)/);
    $title =~ s/:\s+/ /g;
    $title =~ s/[:\/\s]/_/g;
    $title =~ s/[^A-Za-z0-9_:]+/X/g;

    run("wget '$patch_series_url' -O 'patch_$title.patch'");
    run("git checkout -b '$title' master");
    run("git am '$title.patch'");

    return 0;
}

exit main();

__END__

=head1 NAME

ltp_checkout_series.pl - Create a branch and checkout a series to it

=head1 SYNOPSIS

ltp_checkout_series.pl [url]

  Options:
    --help       brief help message
    --dry-run    Do nothing just post commands

=cut
